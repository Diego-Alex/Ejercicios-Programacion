import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Map.Entry;
import java.util.TreeMap;

/**
 * 
 */

/**
 * @author usuario
 *
 */
public class pruebaFichero {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		FileOutputStream fichero = null;
		DataOutputStream salida = null;
		TreeMap<String, Integer> armas = new TreeMap<>();
		String partida = "1";
		try {
			File prueba = new File("Partida" + partida + ".dat");

			
			if (prueba.exists()) {
				String duda=Leer.pedirCadena("Desea sobrescribir?");
				duda=duda.toUpperCase();
				while (!(duda.equals("SI") &&  duda.equals("NO"))) {
					duda=Leer.pedirCadena("Introduzca un \"si\" o un \"no\"");
				}
				if (duda.equals("NO")) {
					return;
				} 
			}

			
			
			fichero = new FileOutputStream("Partida" + partida + ".dat");
			salida = new DataOutputStream(fichero);

			String cadena = "";
			for (Entry<String, Integer> arma : armas.entrySet()) {
				cadena = arma.getKey() + "-" + arma.getValue() + "\n";
				salida.writeUTF(cadena);

			}

			fichero.close();
			salida.close();
			Leer.mostrarEnPantalla("FIN");

		} catch (FileNotFoundException ex) {
			Leer.mostrarEnPantalla("El fichero no existe: " + ex.getMessage());
		} catch (IOException ex) {
			Leer.mostrarEnPantalla("Error de entrada/salida: " + ex.getMessage());
		} finally {
			try {
				if (fichero != null)
					fichero.close();
				if (salida != null)
					salida.close();
			} catch (IOException ex) {
				Leer.mostrarEnPantalla("Error al cerrar fichero: " + ex.getMessage());
			}
		}

	}

}

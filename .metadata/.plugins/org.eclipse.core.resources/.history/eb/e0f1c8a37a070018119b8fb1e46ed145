import java.util.Scanner;

/**
 * 
 */

/**
 * @author usuario
 *
 */
public class Principal {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Autor autores[]=new Autor[5];
		Libro libros[]=new Libro[5];
		Scanner teclado=new Scanner(System.in);
		int opcion=10;
		
		while (opcion!=0) {
			System.out.println();
			System.out.println("1. Crear libro");
			System.out.println("2. Modificar Autor");
			System.out.println("3. Modificar libro");
			System.out.println("4. Listado de Libros");
			System.out.println("5. Listado de Autores");
			System.out.println("0. Salir");
			opcion=Leer.pedirEntero("");
			menu(opcion, autores, libros);
		}
	}

	private static void menu(int opcion,Autor[] autores, Libro[] libros) {
		switch (opcion) {
		case 1:
			crearLibro(autores, libros);
			break;
		case 2:
			
			break;
		case 3:

			break;
		case 4:
			for (int i = 0; i < libros.length; i++) {
				if (libros[i]== null) {
					break;
				}
				libros[i].toString();
			}
			break;
		case 5:
			for (int i = 0; i < autores.length; i++) {
				if (autores[i]== null) {
					break;
				}
				autores[i].toString();
			}
			break;

		default:
			break;
		}
	}

	private static void crearLibro(Autor[] autores, Libro[] libros) {
		Scanner teclado=new Scanner(System.in);
		int contador,contador2=1;
		Boolean encontrado=false;
		contador=Leer.pedirEntero("Cuantos libros desea crear?");
		Autor autorNew =null;
		while (contador!=0) {
			
			String nombreLibro=Leer.pedirCadena("Cual es el nombre del libro "+contador2);
			Leer.mensaje("A continuacion se mostraran los autores que se pueden seleccionar para su libro");
			for (int i = 0; i < autores.length; i++) {
				if (autores[i]== null) {
					break;
				}
				Leer.mensaje(autores[i].getNumero()+". "+autores[i].getNombre());
			}
			Leer.mensaje("000. Crear un nuevo autor");
			String numero=Leer.pedirCadena("");
			if (numero.equals("000")) {
				String nombreAutor=Leer.pedirCadena("Cual es el nombre del autor?");
				String email=Leer.pedirCadena("Cual es el email del autor?");
				Leer.mensaje("Es masculino(m) o femenino(f)?");
				String sexo=teclado.nextLine();
				while (!(sexo.equals("m")||sexo.equals("f")||sexo.equals("M")||sexo.equals("F"))) {
					Leer.mensaje("Por favor ponga una M o una F");
					sexo=teclado.nextLine();
				}
				String fechanacimiento=Leer.pedirCadena("Cual es su fecha de nacimiento?(--/--/----)");
				autores[Autor.getSiguiente()-1]=autores[Autor.getSiguiente()-1].crearAutor(nombreAutor, email, sexo.charAt(0), fechanacimiento);
				autorNew=autores[Autor.getSiguiente()];
			}else {
				
				for (int i = 0; i < libros.length; i++) {
					if (libros[i]== null) {
						break;
					}
					if (numero==libros[i].getNumero()) {
						autorNew=autores[Autor.getSiguiente()-1];
						encontrado=true;
						break;
					}
				}
				if (!encontrado) {
					Leer.mensaje("Lo sentimos, el codigo que ha introducido no existe");
					return;
				}
				
				
			}
			if (encontrado) {
			Double preciolibro=Leer.pedirDecimal("Cual es el precio del libro "+contador);
			Integer cantidadLibro=Leer.pedirEntero("De cuanto es el stock?");
			
			libros[Libro.getSiguiente()-1]=new Libro(nombreLibro, autorNew, preciolibro, cantidadLibro);
			contador--;
			contador2++;
			}
			
			
		}
		
	}
	

}

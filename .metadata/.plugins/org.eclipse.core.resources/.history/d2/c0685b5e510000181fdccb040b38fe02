/**
 * 
 */

/**
 * @author yo
 *
 */
public class Cuentacorriente {
	private String numero;
	private Double saldo;
	private String cliente;
	private static Integer siguiente = 1;
	private static Integer numCuentas = 0;

	/**
	 * @param numero
	 * @param saldo
	 * @param cliente
	 */
	public Cuentacorriente(Double saldo, String cliente) {
		String num = "0000" + siguiente;
		this.numero = num.substring(num.length() - 3);
		this.saldo = saldo;
		this.cliente = cliente;
		siguiente++;
		numCuentas++;
	}

	/**
	 * @return the numero
	 */
	public String getNumero() {
		return numero;
	}

	/**
	 * @param numero
	 *            the numero to set
	 */
	public void setNumero(String numero) {
		this.numero = numero;
	}

	/**
	 * @return the saldo
	 */
	public Double getSaldo() {
		return saldo;
	}

	/**
	 * @param saldo
	 *            the saldo to set
	 */
	public void setSaldo(Double saldo) {
		this.saldo = saldo;
	}

	/**
	 * @return the cliente
	 */
	public String getCliente() {
		return cliente;
	}

	/**
	 * @param cliente
	 *            the cliente to set
	 */
	public void setCliente(String cliente) {
		this.cliente = cliente;
	}

	/**
	 * @return the siguiente
	 */
	public static Integer getSiguiente() {
		return siguiente;
	}

	/**
	 * @param siguiente
	 *            the siguiente to set
	 */
	public static void setSiguiente(Integer siguiente) {
		Cuentacorriente.siguiente = siguiente;
	}

	/**
	 * @param importe
	 *            the importe a ingresar
	 */
	public void ingresarEfectivo(Double importe) {
		this.saldo = saldo + importe;
	}

	public static Integer getNumCuentas() {
		return numCuentas;
	}

	public static void setNumCuentas(Integer numCuentas) {
		Cuentacorriente.numCuentas = numCuentas;
	}

	/**
	 * @param importe
	 *            the importe a retirar
	 */
	public Boolean retirarEfectivo(Double importe) {
		if (importe > this.saldo) {
			return false;
		} else {
			this.saldo = saldo - importe;
			return true;
		}
	}

	public String Visualizacion() {
		String texto;
		texto = "Actualmente hay " + this.numCuentas + " cuentas abiertas.";
		return texto;
	}

	public void cerrarCuentas() {
		this.cliente = "CERRADA";
		this.saldo = 0.0;
		numCuentas--;
	}
	
	public void fusionarCuentas(){
		String cuenta1 = Leer.pedirCadena("Cual es la primera cuenta que desea fusionar?");
		int i, j;
		Boolean existe=false;

		String cuenta2 = Leer.pedirCadena("Con que cuenta desea fusionar la anterior?");
		for (j = 0; j < Cuentacorriente.getSiguiente() - 1; j++) {
			if (cuentas[j].getNumero().equals(cuenta2)) {
				existe = true;
				break;
			}
		}
		if (existe == false || cuentas[j].getCliente().equals("CERRADA")) {
			Leer.mensaje("La cuenta " + cuenta2 + " no existe o esta CERRADA ");
			break;
		}
		if (cuenta1.equals(cuenta2)) {
			Leer.mensaje(
					"No se puede fusionar una cuenta consigo misma, porfavor introduzca dos numero de cuentas diferentes");
			break;
		}
		if (!cuentas[i].getCliente().equals(cuentas[j].getCliente())) {
			Leer.mensaje("Para poder fusionar dos cuentas, estan deben tener al mismo cliente");
			break;
		}
		
		
	}
		

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#toString()
	 */
	/*
	 * @Override public String toString() { return "Cuentacorriente [numero=" +
	 * numero + ", saldo=" + saldo + ", cliente=" + cliente + "]"; }
	 */
	/**
	 * @param siguiente
	 *            the siguiente to set
	 */
	public String visualiza() {
		return "Cuentacorriente [numero=" + numero + ", saldo=" + saldo + ", cliente=" + cliente + "]";
	}

}

import java.util.Scanner;

/**
 * 
 */

/**
 * @author usuario
 *
 */
public class Principal {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Autor autores[]=new Autor[10];
		Libro libros[]=new Libro[10];
		
		base_datos(autores, libros);
		
		Scanner teclado=new Scanner(System.in);
		int opcion=10;
		
		while (opcion!=0) {
			System.out.println();
			System.out.println("1. Crear libro");
			System.out.println("2. Modificar Autor");
			System.out.println("3. Modificar libro");
			System.out.println("4. Listado de Libros");
			System.out.println("5. Listado de Autores");
			System.out.println("0. Salir");
			opcion=Leer.pedirEntero("");
			menu(opcion, autores, libros);
		}
	}


	private static void menu(int opcion,Autor[] autores, Libro[] libros) {
		switch (opcion) {
		case 1:
			crearLibro(autores, libros);
			break;
		case 2:
			modificarAutor(autores);
			break;
		case 3:
			modificarLibro(autores, libros);
			break;
		case 4:
			mostrar_libros(libros);
			break;
		case 5:
			mostrar_Autores(autores);
			break;

		default:
			break;
		}
	}


	private static void crearLibro(Autor[] autores, Libro[] libros) {
		Scanner teclado=new Scanner(System.in);
		int contador,contador2=1;
		Boolean encontrado=true;
		contador=Leer.pedirEntero("Cuantos libros desea crear?");
		Autor autorNew =null;
		while (contador!=0) {
			
			String nombreLibro=Leer.pedirCadena("Cual es el nombre del libro "+contador2);
			Leer.mensaje("A continuacion se mostraran los autores que se pueden seleccionar para su libro");
			for (int i = 0; i < autores.length; i++) {
				if (autores[i]== null) {
					break;
				}
				Leer.mensaje(autores[i].getNumero()+". "+autores[i].getNombre());
			}
			Leer.mensaje("000. Crear un nuevo autor");
			String numero=Leer.pedirCadena("");
			if (numero.equals("000")) {
				String nombreAutor=Leer.pedirCadena("Cual es el nombre del autor?");
				String email=Leer.pedirCadena("Cual es el email del autor?");
				Leer.mensaje("Es masculino(m) o femenino(f)?");
				String sexo=teclado.nextLine();
				while (!(sexo.equals("m")||sexo.equals("f")||sexo.equals("M")||sexo.equals("F"))) {
					Leer.mensaje("Por favor ponga una M o una F");
					sexo=teclado.nextLine();
				}
				String fechanacimiento=Leer.pedirCadena("Cual es su fecha de nacimiento?(--/--/----)");
				autores[Autor.getSiguiente()-1]=new Autor(nombreAutor, email, sexo.charAt(0), fechanacimiento);
				autorNew=autores[Autor.getSiguiente()-2];
			}else {
				encontrado=false;
				for (int i = 0; i < autores.length; i++) {
					if (autores[i]== null) {
						break;
					}
					if (numero.equals(autores[i].getNumero())) {
						autorNew=autores[i];
						encontrado=true;
						break;
					}
				}
				if (!encontrado) {
					Leer.mensaje("Lo sentimos, el codigo que ha introducido no existe");
					return;
				}
				
				
			}
			if (encontrado) {
			Double preciolibro=Leer.pedirDecimal("Cual es el precio del libro "+contador2);
			Integer cantidadLibro=Leer.pedirEntero("De cuanto es el stock?");
			
			libros[Libro.getSiguiente()-1]=new Libro(nombreLibro, autorNew, preciolibro, cantidadLibro);
			contador--;
			}
			contador2++;
			
		}
	}
	
	private static void modificarAutor(Autor[] autores) {
		Leer.mensaje("Que libro desea modificar?");
		mostrar_Autores(autores);
		
	}
	
	private static void modificarLibro(Autor[] autores, Libro[] libros) {
		Leer.mensaje("Que libro desea modificar?");
		mostrar_libros(libros);
		String opcion;
		opcion=Leer.pedirCadena("");
		Integer num=0;
		Boolean encontrado=false;
		for (int i = 0; i < libros.length; i++) {
			if (opcion.equals(libros[i].getNumero())) {
				encontrado=true;
				num=i;
				break;
			}
		}
		if (!encontrado) {
			Leer.mensaje("Lo sentimos, ese libro no esta");
			return;
		}
		
		Leer.mensaje("Que desea modificar?");
		Leer.mensaje("1. Titulo del libro");
		Leer.mensaje("2. Sus autores");
		Leer.mensaje("3. Su precio");
		Leer.mensaje("4. Su cantidad");
		Leer.mensaje("5. Todo");
		Leer.mensaje("0. Nada (Le he dado sin querer :P)");
		opcion=Leer.pedirCadena("");
		menu_MOD_LIB(libros, opcion,num);
		
	}
	private static void menu_MOD_LIB(Libro[] libros, String opcion, Integer num){
				
		switch (opcion) {
		case "1":
			opcion=Leer.pedirCadena("Que nuevo titulo le introduces al libro "+libros[num].getNumero());
			libros[num].modificarlibrotitulo(opcion);
			break;
		case "2":
			Leer.mensaje(libros[num].mostrarAutores());
			opcion=Leer.pedirCadena("Que autor desea modificar?");
			libros[num].modificarlibroautores(opcion);
			break;
		case "3":
			Double Newprecio=0.0;
			Leer.pedirDecimal("De cuanto sera el nuevo precio?");
			libros[num].modificarlibroprecio(Newprecio);;
			break;
		case "4":
			
			break;
		case "5":
			
			break;
		default:
			break;
		}
		
		
	}
	

	private static void mostrar_Autores(Autor[] autores) {
		for (int i = 0; i < autores.length; i++) {
			if (autores[i]== null) {
				break;
			}
			Leer.mensaje(autores[i].toString());
		}
	}

	private static void mostrar_libros(Libro[] libros) {
		for (int i = 0; i < libros.length; i++) {
			if (libros[i]== null) {
				break;
			}
			Leer.mensaje(libros[i].toString());	
		}
	}
	

	private static void base_datos(Autor[] autores, Libro[] libros) {
		autores[Autor.getSiguiente()-1]=new Autor("Adrian", "adrian@gmail.com", 'm', "15/04/1999");
		autores[Autor.getSiguiente()-1]=new Autor("Alejanro", "alejandro@gmail.com", 'm', "20/04/1997");
		libros[Libro.getSiguiente()-1]=new Libro("En busca del pene perdido", autores[0], 45.00, 15);
		libros[Libro.getSiguiente()-1]=new Libro("La historia de PIPO", autores[1], 15.00, 20);
	}
}

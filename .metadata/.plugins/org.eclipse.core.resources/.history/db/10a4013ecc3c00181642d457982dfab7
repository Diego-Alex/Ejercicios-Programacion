import java.util.ArrayList;
import java.util.TreeMap;

/**
 * 
 */

/**
 * @author usuario
 *
 */
public class Ejercicio2 {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Integer numPartidos = Leer.pedirEntero("Cuantos partidos hay?");
		Integer numEscaños = Leer.pedirEntero("Cuantos escaños hay?");
		Integer escaños, votos = 100;

		TreeMap<String, ArrayList<Integer>> tablaParaRepartir = new TreeMap<>();

		for (int i = 1; i <= numPartidos; i++) {
			ArrayList<Integer> listaNumEscaños = new ArrayList<>();
			if (i < numPartidos) {
				escaños = ((int) (Math.random() * ((votos / 3.5) + 1)));

				votos = votos - escaños;
				escaños = escaños * 1000;
			} else {
				escaños = votos * 1000;
			}

			for (int j = 1; j <= numEscaños; j++) {

				listaNumEscaños.add(escaños / j);

			}

			tablaParaRepartir.put("Part" + i, listaNumEscaños);
		}

		for (int i = 1; i <= numPartidos; i++) {

			Leer.mensaje("Part" + i + "= " + tablaParaRepartir.get("Part" + i).toString());
		}
		
		System.out.println();
		TreeMap<String, Integer> tablaDeEscaños = new TreeMap<>();
		
		for (int i = 1; i <= numPartidos; i++) {
			tablaDeEscaños.put("Part" + i, 0);
		}
		
		for (int i = 0; i < numEscaños; i++) {
			String Pmayor="Part1";
			Integer Vmayor=tablaParaRepartir.get(Pmayor).get(0);
			for (int j = 2; j <= numPartidos; j++) {
				Integer comodin=tablaParaRepartir.get("Part"+j).get(0);
				Leer.mensaje(""+comodin);
				if (Vmayor<comodin) {
					Pmayor="Part"+i;
					Vmayor=tablaParaRepartir.get(Pmayor).get(0);
				}
			}
			tablaDeEscaños.put(Pmayor, tablaDeEscaños.get(Pmayor)+1);
			tablaParaRepartir.get(Pmayor).remove(0);
		}

		for (int i = 1; i <= numPartidos; i++) {

			Leer.mensaje("Part" + i + "= " + tablaDeEscaños.get("Part" + i) + " escaños");
		}
		

	}

}
